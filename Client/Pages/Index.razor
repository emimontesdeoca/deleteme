@using BlazorApp.Shared
@inject HttpClient Http
@page "/"


<div class="container text-center app-container mt-4">

	<h2>
		📝
	</h2>
	<h4 class="display-6 mt-2"> NETConf 2021 Todo list! </h4>

	<BlazorApp.Client.Components.TodoForm OnAddCallback="OnAdd" />

	<hr class="mt-3 mb-2 hr-item" />

	<BlazorApp.Client.Components.TodoItem TodoItems="todoItems" OnDelete=OnDelete OnUpdate=OnUpdate />
</div>

@code {
	public List<TodoItem> todoItems { get; set; }

	public async Task LoadData()
	{
		todoItems = await Http.GetFromJsonAsync<List<TodoItem>>("/api/todo");
	}

	public async Task OnUpdate(Guid id)
	{
		var item = todoItems.Single(x => x.Id == id);
		item.Done = !item.Done;

		await Http.PutAsJsonAsync("api/todo", item);
		await LoadData();
	}

	public async Task OnDelete(Guid id)
	{
		await Http.DeleteAsync($"api/todo/{id.ToString()}");
		await LoadData();
	}

	public async Task OnAdd(string value)
	{
		var newTodoItem = new TodoItem()
			{
				Id = Guid.NewGuid(),
				Done = false,
				Message = value
			};

		await Http.PostAsJsonAsync($"api/todo", newTodoItem);
		await LoadData();
	}

	protected override async Task OnInitializedAsync()
	{
		try
		{
			await LoadData();
		}
		catch (Exception ex)
		{
			Console.WriteLine(ex.ToString());
		}
	}
}